N: 44 "A" [body=no, kind=cnst, prop=no, path="Test.ReDun", ];
N: 80 "In" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 41 "In_dec" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 40 "In_rev" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 112 "In_split" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 39 "NoDup_Permutation" [body=yes, kind=cnst, prop=yes, path="Test.ReDun", ];
N: 147 "NoDup_ind" [body=yes, kind=cnst, prop=yes, path="Test.ReDun", ];
N: 57 "NoDup_remove_1" [body=yes, kind=cnst, prop=yes, path="Test.ReDun", ];
N: 56 "NoDup_remove_2" [body=yes, kind=cnst, prop=yes, path="Test.ReDun", ];
N: 100 "NoDup_sind" [body=yes, kind=cnst, prop=no, path="Test.ReDun", ];
N: 174 "Permutation_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 105 "Permutation_app_head" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 94 "Permutation_app_inv" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 52 "Permutation_app_inv_l" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 51 "Permutation_app_inv_r" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 103 "Permutation_app_swap" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 104 "Permutation_app_tail" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 152 "Permutation_cons_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 167 "Permutation_cons_app_inv" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 151 "Permutation_cons_inv" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 126 "Permutation_in" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 173 "Permutation_ind" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 181 "Permutation_ind_bis" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 146 "Permutation_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 172 "Permutation_map" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 171 "Permutation_nil" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 166 "Permutation_nil_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 119 "Permutation_refl" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 170 "Permutation_rev" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 118 "Permutation_sind" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 169 "Permutation_sym" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 98 "Permutation_trans" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 78 "app" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 150 "app_ass" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 125 "app_comm_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 43 "app_cons_not_nil" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 34 "app_eq_nil" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 178 "app_eq_unit" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 108 "app_inj_tail" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 102 "app_inv_head" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 101 "app_inv_tail" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 30 "app_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 129 "app_nil_end" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 97 "app_nth1" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 96 "app_nth2" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 139 "app_removelast_last" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 149 "ass_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 134 "combine" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 50 "combine_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 81 "combine_nth" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 15 "combine_split" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 127 "count_occ" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 180 "count_occ_In" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 179 "count_occ_cons_eq" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 137 "count_occ_cons_neq" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 142 "count_occ_inv_nil" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 148 "count_occ_nil" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 91 "destruct_list" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 158 "distr_rev" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 49 "exists_last" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 124 "existsb" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 164 "existsb_exists" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 48 "existsb_nth" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 24 "filter" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 121 "filter_In" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 72 "find" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 23 "firstn" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 168 "firstn_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 154 "firstn_removelast" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 160 "firstn_skipn" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 106 "flat_map" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 123 "fold_left" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 92 "fold_left_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 165 "fold_left_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 107 "fold_left_rev_right" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 99 "fold_right" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 33 "fold_right_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 130 "fold_symmetric" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 122 "forallb" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 55 "forallb_forall" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 79 "hd" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 71 "head" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 140 "head_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 32 "head_nil" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 120 "in_app_or" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 38 "in_combine_l" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 37 "in_combine_r" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 111 "in_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 65 "in_eq" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 157 "in_flat_map" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 20 "in_inv" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 19 "in_map" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 21 "in_map_iff" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 18 "in_nil" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 113 "in_or_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 110 "in_prod" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 54 "in_prod_aux" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 53 "in_prod_iff" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 144 "in_split_l" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 143 "in_split_r" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 70 "incl" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 153 "incl_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 90 "incl_appl" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 89 "incl_appr" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 88 "incl_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 87 "incl_refl" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 109 "incl_tl" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 86 "incl_tran" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 69 "last" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 77 "lel" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 138 "lel_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 175 "lel_cons_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 85 "lel_nil" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 136 "lel_refl" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 135 "lel_tail" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 176 "lel_trans" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 17 "length" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 16 "list_eq_dec" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 117 "list_ind" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 128 "list_power" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 84 "list_prod" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 116 "list_rec" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 83 "list_rect" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 82 "list_sind" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 76 "map" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 64 "map_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 63 "map_ext" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 177 "map_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 62 "map_map" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 61 "map_nth" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 60 "map_rev" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 161 "nil_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 75 "nth" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 14 "nth_In" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 131 "nth_S_cons" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 114 "nth_default" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 26 "nth_error" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 22 "nth_in_or_default" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 25 "nth_indep" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 13 "nth_ok" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 47 "nth_overflow" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 145 "partition" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 162 "prod_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 12 "remove" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 183 "remove_In" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 163 "removelast" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 159 "removelast_app" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 155 "removelast_firstn" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 74 "rev" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 68 "rev'" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 29 "rev_alt" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 42 "rev_append" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 95 "rev_append_rev" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 28 "rev_ind" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 93 "rev_involutive" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 36 "rev_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 156 "rev_list_ind" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 27 "rev_nth" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 133 "rev_unit" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 73 "seq" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 141 "seq_length" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 182 "seq_nth" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 31 "seq_shift" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 67 "size" [body=no, kind=cnst, prop=no, path="Test", ];
N: 132 "size_nil" [body=no, kind=cnst, prop=yes, path="Test", ];
N: 59 "skipn" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 58 "split" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 115 "split_combine" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 46 "split_length_l" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 45 "split_length_r" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 35 "split_nth" [body=yes, kind=cnst, prop=yes, path="Test", ];
N: 66 "tail" [body=yes, kind=cnst, prop=no, path="Test", ];
N: 3 "NoDup" [kind=inductive, prop=no, path="Test.ReDun", ];
N: 11 "Permutation" [kind=inductive, prop=no, path="Test", ];
N: 6 "list" [kind=inductive, prop=no, path="Test", ];
N: 2 "NoDup_nil" [kind=construct, prop=yes, path="Test.ReDun", ];
N: 10 "perm_nil" [kind=construct, prop=yes, path="Test", ];
N: 5 "nil" [kind=construct, prop=no, path="Test", ];
N: 1 "NoDup_cons" [kind=construct, prop=yes, path="Test.ReDun", ];
N: 9 "perm_skip" [kind=construct, prop=yes, path="Test", ];
N: 4 "cons" [kind=construct, prop=no, path="Test", ];
N: 8 "perm_swap" [kind=construct, prop=yes, path="Test", ];
N: 7 "perm_trans" [kind=construct, prop=yes, path="Test", ];
E: 1 4 [weight=1, ];
E: 1 5 [weight=1, ];
E: 1 6 [weight=1, ];
E: 1 44 [weight=5, ];
E: 1 80 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 5 [weight=1, ];
E: 2 6 [weight=1, ];
E: 2 44 [weight=5, ];
E: 2 80 [weight=1, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 6 [weight=1, ];
E: 3 44 [weight=5, ];
E: 3 80 [weight=1, ];
E: 7 4 [weight=6, ];
E: 7 5 [weight=2, ];
E: 7 6 [weight=6, ];
E: 8 4 [weight=6, ];
E: 8 5 [weight=2, ];
E: 8 6 [weight=6, ];
E: 9 4 [weight=6, ];
E: 9 5 [weight=2, ];
E: 9 6 [weight=6, ];
E: 10 4 [weight=6, ];
E: 10 5 [weight=2, ];
E: 10 6 [weight=6, ];
E: 11 4 [weight=6, ];
E: 11 5 [weight=2, ];
E: 11 6 [weight=6, ];
E: 12 4 [weight=1, ];
E: 12 5 [weight=1, ];
E: 12 6 [weight=8, ];
E: 13 6 [weight=5, ];
E: 14 4 [weight=6, ];
E: 14 5 [weight=6, ];
E: 14 6 [weight=12, ];
E: 14 17 [weight=19, ];
E: 14 75 [weight=14, ];
E: 14 80 [weight=14, ];
E: 15 4 [weight=23, ];
E: 15 5 [weight=23, ];
E: 15 6 [weight=88, ];
E: 15 17 [weight=30, ];
E: 15 58 [weight=10, ];
E: 15 117 [weight=1, ];
E: 15 134 [weight=10, ];
E: 16 4 [weight=70, ];
E: 16 5 [weight=14, ];
E: 16 6 [weight=102, ];
E: 16 83 [weight=1, ];
E: 16 161 [weight=2, ];
E: 17 6 [weight=4, ];
E: 18 5 [weight=3, ];
E: 18 80 [weight=3, ];
E: 19 4 [weight=2, ];
E: 19 5 [weight=2, ];
E: 19 6 [weight=4, ];
E: 19 76 [weight=8, ];
E: 19 80 [weight=16, ];
E: 19 117 [weight=1, ];
E: 20 4 [weight=2, ];
E: 20 6 [weight=2, ];
E: 20 80 [weight=10, ];
E: 21 4 [weight=21, ];
E: 21 5 [weight=13, ];
E: 21 6 [weight=4, ];
E: 21 76 [weight=50, ];
E: 21 80 [weight=125, ];
E: 21 117 [weight=1, ];
E: 22 4 [weight=9, ];
E: 22 5 [weight=4, ];
E: 22 6 [weight=4, ];
E: 22 75 [weight=32, ];
E: 22 80 [weight=16, ];
E: 22 116 [weight=1, ];
E: 23 4 [weight=1, ];
E: 23 5 [weight=2, ];
E: 23 6 [weight=8, ];
E: 24 4 [weight=1, ];
E: 24 5 [weight=1, ];
E: 24 6 [weight=8, ];
E: 25 4 [weight=3, ];
E: 25 5 [weight=3, ];
E: 25 6 [weight=4, ];
E: 25 17 [weight=13, ];
E: 25 75 [weight=14, ];
E: 25 117 [weight=1, ];
E: 26 6 [weight=5, ];
E: 27 4 [weight=30, ];
E: 27 5 [weight=37, ];
E: 27 6 [weight=4, ];
E: 27 17 [weight=78, ];
E: 27 36 [weight=2, ];
E: 27 74 [weight=36, ];
E: 27 75 [weight=43, ];
E: 27 78 [weight=10, ];
E: 27 96 [weight=1, ];
E: 27 97 [weight=1, ];
E: 27 117 [weight=1, ];
E: 28 4 [weight=3, ];
E: 28 5 [weight=4, ];
E: 28 6 [weight=11, ];
E: 28 74 [weight=9, ];
E: 28 78 [weight=2, ];
E: 28 93 [weight=1, ];
E: 28 156 [weight=1, ];
E: 29 5 [weight=4, ];
E: 29 6 [weight=6, ];
E: 29 42 [weight=2, ];
E: 29 74 [weight=4, ];
E: 29 78 [weight=1, ];
E: 29 95 [weight=1, ];
E: 29 129 [weight=1, ];
E: 30 4 [weight=2, ];
E: 30 5 [weight=2, ];
E: 30 6 [weight=11, ];
E: 30 17 [weight=19, ];
E: 30 78 [weight=6, ];
E: 30 117 [weight=1, ];
E: 31 4 [weight=3, ];
E: 31 5 [weight=1, ];
E: 31 6 [weight=10, ];
E: 31 73 [weight=14, ];
E: 31 76 [weight=6, ];
E: 32 5 [weight=2, ];
E: 32 71 [weight=2, ];
E: 33 4 [weight=2, ];
E: 33 5 [weight=2, ];
E: 33 6 [weight=11, ];
E: 33 78 [weight=11, ];
E: 33 99 [weight=30, ];
E: 33 117 [weight=1, ];
E: 34 4 [weight=21, ];
E: 34 5 [weight=56, ];
E: 34 6 [weight=55, ];
E: 34 78 [weight=12, ];
E: 35 4 [weight=39, ];
E: 35 5 [weight=15, ];
E: 35 6 [weight=180, ];
E: 35 58 [weight=32, ];
E: 35 75 [weight=66, ];
E: 35 117 [weight=1, ];
E: 36 4 [weight=7, ];
E: 36 5 [weight=7, ];
E: 36 6 [weight=4, ];
E: 36 17 [weight=22, ];
E: 36 30 [weight=1, ];
E: 36 74 [weight=9, ];
E: 36 78 [weight=1, ];
E: 36 117 [weight=1, ];
E: 37 4 [weight=5, ];
E: 37 5 [weight=3, ];
E: 37 6 [weight=12, ];
E: 37 80 [weight=21, ];
E: 37 117 [weight=1, ];
E: 37 134 [weight=10, ];
E: 38 4 [weight=7, ];
E: 38 5 [weight=3, ];
E: 38 6 [weight=12, ];
E: 38 80 [weight=21, ];
E: 38 117 [weight=1, ];
E: 38 134 [weight=10, ];
E: 39 3 [weight=25, ];
E: 39 4 [weight=82, ];
E: 39 5 [weight=20, ];
E: 39 6 [weight=66, ];
E: 39 10 [weight=1, ];
E: 39 11 [weight=16, ];
E: 39 44 [weight=415, ];
E: 39 56 [weight=1, ];
E: 39 57 [weight=1, ];
E: 39 78 [weight=39, ];
E: 39 80 [weight=129, ];
E: 39 112 [weight=1, ];
E: 39 113 [weight=2, ];
E: 39 117 [weight=1, ];
E: 39 120 [weight=2, ];
E: 39 152 [weight=1, ];
E: 40 4 [weight=16, ];
E: 40 5 [weight=18, ];
E: 40 6 [weight=4, ];
E: 40 74 [weight=30, ];
E: 40 78 [weight=5, ];
E: 40 80 [weight=62, ];
E: 40 113 [weight=2, ];
E: 40 117 [weight=1, ];
E: 40 120 [weight=1, ];
E: 41 4 [weight=6, ];
E: 41 5 [weight=2, ];
E: 41 6 [weight=4, ];
E: 41 18 [weight=1, ];
E: 41 80 [weight=36, ];
E: 41 116 [weight=1, ];
E: 42 4 [weight=1, ];
E: 42 6 [weight=10, ];
E: 43 4 [weight=12, ];
E: 43 5 [weight=10, ];
E: 43 6 [weight=25, ];
E: 43 78 [weight=7, ];
E: 45 4 [weight=8, ];
E: 45 5 [weight=2, ];
E: 45 6 [weight=48, ];
E: 45 17 [weight=22, ];
E: 45 58 [weight=7, ];
E: 45 117 [weight=1, ];
E: 46 4 [weight=8, ];
E: 46 5 [weight=2, ];
E: 46 6 [weight=48, ];
E: 46 17 [weight=22, ];
E: 46 58 [weight=7, ];
E: 46 117 [weight=1, ];
E: 47 4 [weight=6, ];
E: 47 5 [weight=6, ];
E: 47 6 [weight=4, ];
E: 47 17 [weight=18, ];
E: 47 75 [weight=9, ];
E: 47 117 [weight=1, ];
E: 48 4 [weight=3, ];
E: 48 5 [weight=19, ];
E: 48 6 [weight=4, ];
E: 48 17 [weight=24, ];
E: 48 75 [weight=11, ];
E: 48 117 [weight=1, ];
E: 48 124 [weight=13, ];
E: 49 4 [weight=50, ];
E: 49 5 [weight=46, ];
E: 49 6 [weight=75, ];
E: 49 78 [weight=25, ];
E: 49 83 [weight=1, ];
E: 50 4 [weight=8, ];
E: 50 5 [weight=4, ];
E: 50 6 [weight=12, ];
E: 50 17 [weight=24, ];
E: 50 117 [weight=1, ];
E: 50 134 [weight=8, ];
E: 51 4 [weight=2, ];
E: 51 5 [weight=3, ];
E: 51 6 [weight=18, ];
E: 51 11 [weight=12, ];
E: 51 78 [weight=11, ];
E: 51 94 [weight=1, ];
E: 51 117 [weight=1, ];
E: 51 129 [weight=2, ];
E: 52 4 [weight=4, ];
E: 52 5 [weight=2, ];
E: 52 6 [weight=18, ];
E: 52 11 [weight=12, ];
E: 52 78 [weight=14, ];
E: 52 117 [weight=1, ];
E: 52 151 [weight=1, ];
E: 53 4 [weight=2, ];
E: 53 5 [weight=2, ];
E: 53 6 [weight=6, ];
E: 53 21 [weight=1, ];
E: 53 76 [weight=11, ];
E: 53 78 [weight=1, ];
E: 53 80 [weight=87, ];
E: 53 84 [weight=12, ];
E: 53 110 [weight=1, ];
E: 53 117 [weight=1, ];
E: 53 120 [weight=1, ];
E: 54 4 [weight=2, ];
E: 54 5 [weight=2, ];
E: 54 6 [weight=4, ];
E: 54 76 [weight=8, ];
E: 54 80 [weight=16, ];
E: 54 117 [weight=1, ];
E: 55 4 [weight=2, ];
E: 55 5 [weight=2, ];
E: 55 6 [weight=4, ];
E: 55 80 [weight=19, ];
E: 55 117 [weight=1, ];
E: 55 122 [weight=25, ];
E: 56 3 [weight=19, ];
E: 56 4 [weight=66, ];
E: 56 5 [weight=8, ];
E: 56 6 [weight=64, ];
E: 56 44 [weight=256, ];
E: 56 78 [weight=43, ];
E: 56 80 [weight=33, ];
E: 56 113 [weight=1, ];
E: 56 117 [weight=1, ];
E: 57 1 [weight=1, ];
E: 57 3 [weight=32, ];
E: 57 4 [weight=67, ];
E: 57 5 [weight=8, ];
E: 57 6 [weight=61, ];
E: 57 44 [weight=230, ];
E: 57 78 [weight=37, ];
E: 57 80 [weight=27, ];
E: 57 113 [weight=1, ];
E: 57 117 [weight=1, ];
E: 57 120 [weight=1, ];
E: 58 4 [weight=2, ];
E: 58 5 [weight=2, ];
E: 58 6 [weight=20, ];
E: 59 5 [weight=1, ];
E: 59 6 [weight=8, ];
E: 60 4 [weight=9, ];
E: 60 5 [weight=10, ];
E: 60 6 [weight=17, ];
E: 60 64 [weight=1, ];
E: 60 74 [weight=18, ];
E: 60 76 [weight=19, ];
E: 60 78 [weight=6, ];
E: 60 117 [weight=1, ];
E: 61 4 [weight=5, ];
E: 61 5 [weight=6, ];
E: 61 6 [weight=4, ];
E: 61 75 [weight=21, ];
E: 61 76 [weight=8, ];
E: 61 117 [weight=1, ];
E: 62 4 [weight=5, ];
E: 62 5 [weight=3, ];
E: 62 6 [weight=14, ];
E: 62 76 [weight=20, ];
E: 62 117 [weight=1, ];
E: 63 4 [weight=7, ];
E: 63 5 [weight=3, ];
E: 63 6 [weight=15, ];
E: 63 76 [weight=16, ];
E: 63 117 [weight=1, ];
E: 64 4 [weight=5, ];
E: 64 5 [weight=2, ];
E: 64 6 [weight=21, ];
E: 64 76 [weight=23, ];
E: 64 78 [weight=14, ];
E: 64 117 [weight=1, ];
E: 65 4 [weight=2, ];
E: 65 6 [weight=3, ];
E: 65 80 [weight=3, ];
E: 66 5 [weight=1, ];
E: 66 6 [weight=5, ];
E: 67 6 [weight=1, ];
E: 68 5 [weight=1, ];
E: 68 6 [weight=3, ];
E: 68 42 [weight=1, ];
E: 69 6 [weight=5, ];
E: 70 6 [weight=4, ];
E: 70 80 [weight=2, ];
E: 71 6 [weight=3, ];
E: 72 6 [weight=4, ];
E: 73 4 [weight=1, ];
E: 73 5 [weight=1, ];
E: 73 6 [weight=3, ];
E: 74 4 [weight=1, ];
E: 74 5 [weight=2, ];
E: 74 6 [weight=7, ];
E: 74 78 [weight=1, ];
E: 75 6 [weight=5, ];
E: 76 4 [weight=1, ];
E: 76 5 [weight=1, ];
E: 76 6 [weight=7, ];
E: 77 6 [weight=4, ];
E: 77 17 [weight=2, ];
E: 78 4 [weight=1, ];
E: 78 6 [weight=10, ];
E: 79 6 [weight=3, ];
E: 80 6 [weight=4, ];
E: 81 4 [weight=25, ];
E: 81 5 [weight=25, ];
E: 81 6 [weight=13, ];
E: 81 17 [weight=24, ];
E: 81 75 [weight=39, ];
E: 81 117 [weight=1, ];
E: 81 134 [weight=13, ];
E: 82 4 [weight=2, ];
E: 82 5 [weight=2, ];
E: 82 6 [weight=8, ];
E: 83 4 [weight=2, ];
E: 83 5 [weight=2, ];
E: 83 6 [weight=8, ];
E: 84 5 [weight=1, ];
E: 84 6 [weight=10, ];
E: 84 76 [weight=1, ];
E: 84 78 [weight=1, ];
E: 85 4 [weight=2, ];
E: 85 5 [weight=11, ];
E: 85 6 [weight=9, ];
E: 85 17 [weight=1, ];
E: 85 77 [weight=5, ];
E: 85 117 [weight=1, ];
E: 86 6 [weight=6, ];
E: 86 70 [weight=6, ];
E: 86 80 [weight=1, ];
E: 87 6 [weight=2, ];
E: 87 70 [weight=2, ];
E: 87 80 [weight=1, ];
E: 88 4 [weight=3, ];
E: 88 6 [weight=8, ];
E: 88 70 [weight=4, ];
E: 88 80 [weight=18, ];
E: 89 6 [weight=6, ];
E: 89 70 [weight=4, ];
E: 89 78 [weight=2, ];
E: 89 80 [weight=3, ];
E: 89 113 [weight=1, ];
E: 90 6 [weight=6, ];
E: 90 70 [weight=4, ];
E: 90 78 [weight=2, ];
E: 90 80 [weight=3, ];
E: 90 113 [weight=1, ];
E: 91 4 [weight=12, ];
E: 91 5 [weight=8, ];
E: 91 6 [weight=32, ];
E: 91 83 [weight=1, ];
E: 92 4 [weight=2, ];
E: 92 5 [weight=2, ];
E: 92 6 [weight=10, ];
E: 92 78 [weight=5, ];
E: 92 117 [weight=1, ];
E: 92 123 [weight=16, ];
E: 93 4 [weight=8, ];
E: 93 5 [weight=4, ];
E: 93 6 [weight=17, ];
E: 93 74 [weight=17, ];
E: 93 78 [weight=1, ];
E: 93 117 [weight=1, ];
E: 93 133 [weight=1, ];
E: 94 4 [weight=975, ];
E: 94 5 [weight=35, ];
E: 94 6 [weight=814, ];
E: 94 7 [weight=10, ];
E: 94 8 [weight=3, ];
E: 94 9 [weight=15, ];
E: 94 11 [weight=191, ];
E: 94 78 [weight=631, ];
E: 94 80 [weight=4, ];
E: 94 112 [weight=1, ];
E: 94 113 [weight=1, ];
E: 94 119 [weight=6, ];
E: 94 126 [weight=1, ];
E: 94 152 [weight=6, ];
E: 94 169 [weight=23, ];
E: 94 181 [weight=1, ];
E: 95 4 [weight=9, ];
E: 95 5 [weight=5, ];
E: 95 6 [weight=21, ];
E: 95 42 [weight=7, ];
E: 95 74 [weight=9, ];
E: 95 78 [weight=10, ];
E: 95 117 [weight=1, ];
E: 95 149 [weight=1, ];
E: 96 4 [weight=9, ];
E: 96 5 [weight=6, ];
E: 96 6 [weight=9, ];
E: 96 17 [weight=30, ];
E: 96 75 [weight=26, ];
E: 96 78 [weight=8, ];
E: 96 117 [weight=1, ];
E: 97 4 [weight=9, ];
E: 97 5 [weight=19, ];
E: 97 6 [weight=9, ];
E: 97 17 [weight=24, ];
E: 97 75 [weight=24, ];
E: 97 78 [weight=11, ];
E: 97 117 [weight=1, ];
E: 98 6 [weight=3, ];
E: 98 7 [weight=1, ];
E: 98 11 [weight=3, ];
E: 99 6 [weight=4, ];
E: 100 3 [weight=6, ];
E: 100 4 [weight=2, ];
E: 100 5 [weight=2, ];
E: 100 6 [weight=7, ];
E: 100 44 [weight=15, ];
E: 100 80 [weight=2, ];
E: 101 4 [weight=38, ];
E: 101 5 [weight=13, ];
E: 101 6 [weight=97, ];
E: 101 17 [weight=46, ];
E: 101 30 [weight=2, ];
E: 101 78 [weight=36, ];
E: 101 117 [weight=1, ];
E: 102 4 [weight=7, ];
E: 102 5 [weight=2, ];
E: 102 6 [weight=44, ];
E: 102 78 [weight=18, ];
E: 102 117 [weight=1, ];
E: 103 4 [weight=42, ];
E: 103 5 [weight=6, ];
E: 103 6 [weight=18, ];
E: 103 8 [weight=1, ];
E: 103 9 [weight=3, ];
E: 103 11 [weight=11, ];
E: 103 78 [weight=43, ];
E: 103 98 [weight=3, ];
E: 103 117 [weight=2, ];
E: 103 119 [weight=2, ];
E: 103 125 [weight=1, ];
E: 103 129 [weight=2, ];
E: 103 169 [weight=3, ];
E: 104 4 [weight=10, ];
E: 104 5 [weight=2, ];
E: 104 6 [weight=14, ];
E: 104 8 [weight=1, ];
E: 104 9 [weight=1, ];
E: 104 11 [weight=14, ];
E: 104 78 [weight=28, ];
E: 104 98 [weight=1, ];
E: 104 119 [weight=1, ];
E: 104 169 [weight=2, ];
E: 104 173 [weight=1, ];
E: 105 4 [weight=6, ];
E: 105 6 [weight=12, ];
E: 105 9 [weight=1, ];
E: 105 11 [weight=7, ];
E: 105 78 [weight=14, ];
E: 105 117 [weight=1, ];
E: 105 125 [weight=2, ];
E: 106 5 [weight=1, ];
E: 106 6 [weight=10, ];
E: 106 78 [weight=1, ];
E: 107 4 [weight=6, ];
E: 107 5 [weight=6, ];
E: 107 6 [weight=4, ];
E: 107 33 [weight=1, ];
E: 107 74 [weight=9, ];
E: 107 78 [weight=1, ];
E: 107 99 [weight=10, ];
E: 107 117 [weight=1, ];
E: 107 123 [weight=7, ];
E: 108 4 [weight=88, ];
E: 108 5 [weight=78, ];
E: 108 6 [weight=99, ];
E: 108 43 [weight=2, ];
E: 108 78 [weight=41, ];
E: 108 117 [weight=1, ];
E: 109 4 [weight=2, ];
E: 109 6 [weight=4, ];
E: 109 70 [weight=4, ];
E: 109 80 [weight=1, ];
E: 109 111 [weight=1, ];
E: 110 4 [weight=2, ];
E: 110 5 [weight=2, ];
E: 110 6 [weight=11, ];
E: 110 54 [weight=1, ];
E: 110 76 [weight=5, ];
E: 110 80 [weight=27, ];
E: 110 84 [weight=9, ];
E: 110 113 [weight=1, ];
E: 110 117 [weight=1, ];
E: 111 4 [weight=2, ];
E: 111 6 [weight=3, ];
E: 111 80 [weight=6, ];
E: 112 4 [weight=46, ];
E: 112 5 [weight=6, ];
E: 112 6 [weight=103, ];
E: 112 78 [weight=25, ];
E: 112 80 [weight=8, ];
E: 112 117 [weight=1, ];
E: 113 4 [weight=2, ];
E: 113 5 [weight=2, ];
E: 113 6 [weight=7, ];
E: 113 78 [weight=11, ];
E: 113 80 [weight=40, ];
E: 113 117 [weight=1, ];
E: 114 6 [weight=2, ];
E: 114 26 [weight=1, ];
E: 115 4 [weight=17, ];
E: 115 5 [weight=3, ];
E: 115 6 [weight=55, ];
E: 115 58 [weight=7, ];
E: 115 117 [weight=1, ];
E: 115 134 [weight=16, ];
E: 116 4 [weight=1, ];
E: 116 5 [weight=1, ];
E: 116 6 [weight=4, ];
E: 116 83 [weight=1, ];
E: 117 4 [weight=2, ];
E: 117 5 [weight=2, ];
E: 117 6 [weight=8, ];
E: 118 4 [weight=12, ];
E: 118 5 [weight=4, ];
E: 118 6 [weight=22, ];
E: 118 11 [weight=10, ];
E: 119 6 [weight=4, ];
E: 119 9 [weight=1, ];
E: 119 10 [weight=1, ];
E: 119 11 [weight=3, ];
E: 119 117 [weight=1, ];
E: 120 4 [weight=2, ];
E: 120 5 [weight=2, ];
E: 120 6 [weight=7, ];
E: 120 78 [weight=9, ];
E: 120 80 [weight=39, ];
E: 120 117 [weight=1, ];
E: 121 4 [weight=5, ];
E: 121 5 [weight=2, ];
E: 121 6 [weight=6, ];
E: 121 24 [weight=49, ];
E: 121 80 [weight=107, ];
E: 121 117 [weight=1, ];
E: 122 6 [weight=4, ];
E: 123 6 [weight=4, ];
E: 124 6 [weight=4, ];
E: 125 4 [weight=3, ];
E: 125 6 [weight=6, ];
E: 125 78 [weight=3, ];
E: 126 4 [weight=6, ];
E: 126 5 [weight=2, ];
E: 126 6 [weight=12, ];
E: 126 11 [weight=5, ];
E: 126 80 [weight=40, ];
E: 126 173 [weight=1, ];
E: 127 6 [weight=4, ];
E: 128 4 [weight=2, ];
E: 128 5 [weight=2, ];
E: 128 6 [weight=19, ];
E: 128 76 [weight=1, ];
E: 128 106 [weight=1, ];
E: 129 4 [weight=5, ];
E: 129 5 [weight=9, ];
E: 129 6 [weight=14, ];
E: 129 78 [weight=6, ];
E: 129 117 [weight=1, ];
E: 130 4 [weight=4, ];
E: 130 5 [weight=3, ];
E: 130 6 [weight=6, ];
E: 130 99 [weight=18, ];
E: 130 117 [weight=1, ];
E: 130 123 [weight=13, ];
E: 131 4 [weight=4, ];
E: 131 6 [weight=3, ];
E: 131 75 [weight=7, ];
E: 131 80 [weight=6, ];
E: 132 5 [weight=1, ];
E: 132 67 [weight=1, ];
E: 133 4 [weight=3, ];
E: 133 5 [weight=2, ];
E: 133 6 [weight=3, ];
E: 133 74 [weight=2, ];
E: 133 78 [weight=1, ];
E: 133 158 [weight=1, ];
E: 134 4 [weight=1, ];
E: 134 5 [weight=2, ];
E: 134 6 [weight=12, ];
E: 135 4 [weight=6, ];
E: 135 6 [weight=4, ];
E: 135 17 [weight=8, ];
E: 135 77 [weight=4, ];
E: 136 6 [weight=2, ];
E: 136 17 [weight=1, ];
E: 136 77 [weight=2, ];
E: 137 4 [weight=2, ];
E: 137 6 [weight=2, ];
E: 137 127 [weight=10, ];
E: 138 4 [weight=3, ];
E: 138 6 [weight=4, ];
E: 138 17 [weight=8, ];
E: 138 77 [weight=4, ];
E: 139 4 [weight=44, ];
E: 139 5 [weight=35, ];
E: 139 6 [weight=34, ];
E: 139 69 [weight=13, ];
E: 139 78 [weight=13, ];
E: 139 117 [weight=1, ];
E: 139 163 [weight=13, ];
E: 140 4 [weight=2, ];
E: 140 6 [weight=2, ];
E: 140 71 [weight=2, ];
E: 141 17 [weight=6, ];
E: 141 73 [weight=6, ];
E: 142 4 [weight=3, ];
E: 142 5 [weight=11, ];
E: 142 6 [weight=14, ];
E: 142 117 [weight=1, ];
E: 142 127 [weight=19, ];
E: 143 4 [weight=10, ];
E: 143 5 [weight=2, ];
E: 143 6 [weight=58, ];
E: 143 58 [weight=8, ];
E: 143 80 [weight=28, ];
E: 143 117 [weight=1, ];
E: 144 4 [weight=10, ];
E: 144 5 [weight=2, ];
E: 144 6 [weight=58, ];
E: 144 58 [weight=8, ];
E: 144 80 [weight=28, ];
E: 144 117 [weight=1, ];
E: 145 4 [weight=2, ];
E: 145 5 [weight=2, ];
E: 145 6 [weight=22, ];
E: 146 4 [weight=6, ];
E: 146 5 [weight=2, ];
E: 146 6 [weight=12, ];
E: 146 11 [weight=5, ];
E: 146 17 [weight=24, ];
E: 146 173 [weight=1, ];
E: 147 3 [weight=6, ];
E: 147 4 [weight=2, ];
E: 147 5 [weight=2, ];
E: 147 6 [weight=7, ];
E: 147 44 [weight=15, ];
E: 147 80 [weight=2, ];
E: 148 5 [weight=2, ];
E: 148 127 [weight=2, ];
E: 149 6 [weight=8, ];
E: 149 78 [weight=8, ];
E: 149 150 [weight=1, ];
E: 150 4 [weight=5, ];
E: 150 5 [weight=2, ];
E: 150 6 [weight=18, ];
E: 150 78 [weight=29, ];
E: 150 117 [weight=1, ];
E: 151 4 [weight=4, ];
E: 151 5 [weight=2, ];
E: 151 6 [weight=4, ];
E: 151 11 [weight=3, ];
E: 151 94 [weight=1, ];
E: 152 4 [weight=27, ];
E: 152 5 [weight=2, ];
E: 152 6 [weight=19, ];
E: 152 7 [weight=2, ];
E: 152 8 [weight=1, ];
E: 152 9 [weight=3, ];
E: 152 11 [weight=12, ];
E: 152 78 [weight=22, ];
E: 152 117 [weight=1, ];
E: 152 119 [weight=1, ];
E: 153 6 [weight=12, ];
E: 153 70 [weight=6, ];
E: 153 78 [weight=4, ];
E: 153 80 [weight=16, ];
E: 153 120 [weight=1, ];
E: 154 4 [weight=17, ];
E: 154 5 [weight=27, ];
E: 154 6 [weight=40, ];
E: 154 17 [weight=26, ];
E: 154 23 [weight=30, ];
E: 154 78 [weight=3, ];
E: 154 159 [weight=1, ];
E: 154 163 [weight=17, ];
E: 155 4 [weight=16, ];
E: 155 5 [weight=37, ];
E: 155 6 [weight=45, ];
E: 155 17 [weight=18, ];
E: 155 23 [weight=30, ];
E: 155 78 [weight=3, ];
E: 155 159 [weight=1, ];
E: 155 163 [weight=11, ];
E: 156 4 [weight=2, ];
E: 156 5 [weight=2, ];
E: 156 6 [weight=8, ];
E: 156 74 [weight=7, ];
E: 156 117 [weight=1, ];
E: 157 4 [weight=2, ];
E: 157 5 [weight=2, ];
E: 157 6 [weight=6, ];
E: 157 78 [weight=3, ];
E: 157 80 [weight=129, ];
E: 157 106 [weight=32, ];
E: 157 113 [weight=1, ];
E: 157 117 [weight=1, ];
E: 157 120 [weight=1, ];
E: 158 4 [weight=8, ];
E: 158 5 [weight=13, ];
E: 158 6 [weight=22, ];
E: 158 74 [weight=29, ];
E: 158 78 [weight=20, ];
E: 158 117 [weight=1, ];
E: 158 129 [weight=1, ];
E: 158 150 [weight=1, ];
E: 159 4 [weight=26, ];
E: 159 5 [weight=30, ];
E: 159 6 [weight=71, ];
E: 159 78 [weight=35, ];
E: 159 117 [weight=1, ];
E: 159 163 [weight=38, ];
E: 160 4 [weight=10, ];
E: 160 5 [weight=4, ];
E: 160 6 [weight=29, ];
E: 160 23 [weight=13, ];
E: 160 59 [weight=13, ];
E: 160 78 [weight=13, ];
E: 161 4 [weight=4, ];
E: 161 5 [weight=4, ];
E: 161 6 [weight=8, ];
E: 162 4 [weight=2, ];
E: 162 5 [weight=2, ];
E: 162 6 [weight=11, ];
E: 162 17 [weight=31, ];
E: 162 30 [weight=1, ];
E: 162 76 [weight=4, ];
E: 162 78 [weight=1, ];
E: 162 84 [weight=10, ];
E: 162 117 [weight=1, ];
E: 162 177 [weight=1, ];
E: 163 4 [weight=1, ];
E: 163 5 [weight=2, ];
E: 163 6 [weight=9, ];
E: 164 4 [weight=2, ];
E: 164 5 [weight=2, ];
E: 164 6 [weight=4, ];
E: 164 80 [weight=55, ];
E: 164 117 [weight=1, ];
E: 164 124 [weight=37, ];
E: 165 4 [weight=2, ];
E: 165 5 [weight=2, ];
E: 165 6 [weight=7, ];
E: 165 17 [weight=12, ];
E: 165 117 [weight=1, ];
E: 165 123 [weight=8, ];
E: 166 4 [weight=5, ];
E: 166 5 [weight=4, ];
E: 166 6 [weight=4, ];
E: 166 11 [weight=3, ];
E: 166 161 [weight=1, ];
E: 166 171 [weight=1, ];
E: 167 4 [weight=4, ];
E: 167 5 [weight=1, ];
E: 167 6 [weight=6, ];
E: 167 11 [weight=3, ];
E: 167 78 [weight=3, ];
E: 167 94 [weight=1, ];
E: 168 4 [weight=4, ];
E: 168 5 [weight=4, ];
E: 168 6 [weight=9, ];
E: 168 17 [weight=20, ];
E: 168 23 [weight=10, ];
E: 169 6 [weight=12, ];
E: 169 7 [weight=1, ];
E: 169 8 [weight=1, ];
E: 169 9 [weight=1, ];
E: 169 10 [weight=1, ];
E: 169 11 [weight=10, ];
E: 169 173 [weight=1, ];
E: 170 4 [weight=12, ];
E: 170 5 [weight=7, ];
E: 170 6 [weight=4, ];
E: 170 9 [weight=1, ];
E: 170 11 [weight=6, ];
E: 170 74 [weight=12, ];
E: 170 78 [weight=3, ];
E: 170 98 [weight=1, ];
E: 170 103 [weight=1, ];
E: 170 117 [weight=1, ];
E: 170 119 [weight=1, ];
E: 170 169 [weight=2, ];
E: 171 4 [weight=10, ];
E: 171 5 [weight=23, ];
E: 171 6 [weight=30, ];
E: 171 11 [weight=5, ];
E: 171 161 [weight=2, ];
E: 171 173 [weight=1, ];
E: 172 4 [weight=6, ];
E: 172 5 [weight=2, ];
E: 172 6 [weight=12, ];
E: 172 7 [weight=1, ];
E: 172 8 [weight=1, ];
E: 172 9 [weight=1, ];
E: 172 10 [weight=1, ];
E: 172 11 [weight=14, ];
E: 172 76 [weight=24, ];
E: 172 173 [weight=1, ];
E: 173 4 [weight=12, ];
E: 173 5 [weight=4, ];
E: 173 6 [weight=22, ];
E: 173 11 [weight=10, ];
E: 174 4 [weight=66, ];
E: 174 6 [weight=36, ];
E: 174 8 [weight=1, ];
E: 174 9 [weight=1, ];
E: 174 11 [weight=22, ];
E: 174 78 [weight=53, ];
E: 174 98 [weight=2, ];
E: 174 104 [weight=1, ];
E: 174 105 [weight=1, ];
E: 174 125 [weight=10, ];
E: 174 169 [weight=2, ];
E: 174 173 [weight=1, ];
E: 175 4 [weight=6, ];
E: 175 6 [weight=4, ];
E: 175 17 [weight=14, ];
E: 175 77 [weight=4, ];
E: 176 6 [weight=6, ];
E: 176 17 [weight=7, ];
E: 176 77 [weight=6, ];
E: 177 4 [weight=2, ];
E: 177 5 [weight=2, ];
E: 177 6 [weight=4, ];
E: 177 17 [weight=12, ];
E: 177 76 [weight=6, ];
E: 177 117 [weight=1, ];
E: 178 4 [weight=87, ];
E: 178 5 [weight=107, ];
E: 178 6 [weight=107, ];
E: 178 43 [weight=1, ];
E: 178 78 [weight=19, ];
E: 178 129 [weight=1, ];
E: 179 4 [weight=2, ];
E: 179 6 [weight=2, ];
E: 179 127 [weight=10, ];
E: 180 4 [weight=2, ];
E: 180 5 [weight=2, ];
E: 180 6 [weight=4, ];
E: 180 80 [weight=27, ];
E: 180 117 [weight=1, ];
E: 180 127 [weight=29, ];
E: 181 4 [weight=23, ];
E: 181 5 [weight=4, ];
E: 181 6 [weight=34, ];
E: 181 8 [weight=1, ];
E: 181 11 [weight=13, ];
E: 181 117 [weight=2, ];
E: 181 119 [weight=6, ];
E: 181 173 [weight=1, ];
E: 182 4 [weight=3, ];
E: 182 73 [weight=12, ];
E: 182 75 [weight=12, ];
E: 183 4 [weight=4, ];
E: 183 5 [weight=2, ];
E: 183 6 [weight=5, ];
E: 183 12 [weight=12, ];
E: 183 80 [weight=11, ];
E: 183 117 [weight=1, ];
